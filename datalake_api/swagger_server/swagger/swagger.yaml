openapi: 3.0.3
info:
  title: DTaaS API
  description: This API handles the communication between the virtual infrastructure generated by the DTaaS codebase and the User. The goal is to allow to Upload, Update, Donwload and Process data from a Dual S3/PFS Datalake thanks to interaction with a MongoDB.
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
paths:

  /job_status:
    get:
      summary: Show status of jobs running on HPC
      operationId: job_status
      parameters:
        - name: user
          in: query
          description: Username for which to filter jobs
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of jobs successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: Table showing job status.
        '400':
          description: Bad Request - Incorrect Format or Parameters
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '500':
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /browse_files:
    get:
      summary: List files from the datalake with optional SQL-like filtering
      operationId: browse_files
      parameters:
        - name: filter
          in: query
          description: SQL-like filter to apply on the files list.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of files successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: S3 key of a file in the datalake.
        '400':
          description: Bad Request - Incorrect Format or Parameters
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '500':
          description: Internal Server Error
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /delete:
    delete:
      summary: Delete a file in datalake (S3) and its MongoDB entry based on the given file_path
      operationId: delete_file
      parameters:
        - name: file_name
          in: query
          required: true
          description: Name (S3 key) of the file in the datalake and MongoDB to be deleted
          schema:
            type: string
      responses:
        '200':
          description: File and its database entry deleted successfully
        '400':
          description: Bad Request - Invalid file name or format
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '404':
          description: Not Found - File does not exist
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /download:
    get:
      summary: Download an item (using item path) from the datalake
      operationId: download_id_get
      parameters:
        - name: file_name
          in: query
          required: true
          description: Path of the item to be downloaded
          schema:
            type: string
      responses:
        '200':
          description: Download Successful
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /query_and_process:
    post:
      summary: Query (sql in .txt) and Manipulate (file.py) datalake items, with optional server and client configurations
      operationId: query_post
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/query_and_process_body'
      responses:
        '200':
          description: Query and Manipulate Successful
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '400':
          description: Bad Request - Incorrect Format or Parameters
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '422':
          description: Unprocessable Entity - Query or Processing Error
        '501':
          description: Job not submitted
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /launch_container:
    post:
      summary: Launch Singularity container on datalake items matching the query
      operationId: launch_container
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/launch_container_body'
      responses:
        '200':
          description: Container launched successfully
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '400':
          description: Bad Request - Incorrect Format or Parameters
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '422':
          description: Unprocessable Entity - Query or Processing Error
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /replace:
    put:
      summary: Replace an existing entry and its associated file in S3 for the given path in MongoDB
      operationId: replace_entry
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_body'
      responses:
        '200':
          description: Entry and file replaced successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Path not found in the database
        '422':
          description: Unprocessable Entity
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /update:
    patch:
      summary: Update metadata in MongoDB for a file given its path
      operationId: update_entry
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/update_path_body'
      responses:
        '200':
          description: Entry metadata updated successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Path not found in the database
        '422':
          description: Unprocessable Entity
      x-openapi-router-controller: swagger_server.controllers.default_controller

  /upload:
    post:
      summary: Upload files to datalake (S3) and add entries to MongoDB or replace files in datalake (S3) and keep corresponding MongoDB entry
      operationId: upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/upload_body'
      responses:
        '201':
          description: Upload Successful
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '400':
          description: Upload Failed - Bad Request or Incorrect Format
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '401':
          description: Unauthorized - Invalid Token
        '403':
          description: Forbidden - Insufficient Permissions
        '409':
          description: Conflict - Duplicate Entry Detected
      x-openapi-router-controller: swagger_server.controllers.default_controller

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.decode_token
      
  schemas:
    query_and_process_body:
      required:
        - query_file
      type: object
      properties:
        query_file:
          type: string
          format: binary
        python_file:
          type: string
          format: binary

    launch_container_body:
      required:
        - query_file
      type: object
      properties:
        query_file:
          type: string
          format: binary
        container_file:
          type: string
          format: binary
        input_json:
          type: string
          format: binary
        output_json:
          type: string
          format: binary

    replace_path_body:
      type: object
      properties:
        metadata:
          type: string
          format: json
        file:
          type: string
          format: binary

    upload_body:
      required:
        - file
        - json_data
      type: object
      properties:
        file:
          type: string
          format: binary
        json_data:
          type: string
          format: binary

    update_path_body:
      required:
        - file
        - json_data
      type: object
      properties:
        file:
          type: string
        json_data:
          type: string
          format: binary


security:
  - bearerAuth: []